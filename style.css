/* style.css */
:root {
    --color-bg-deep-blue: #1a2238;
    --color-bg-charcoal: #23272a;
    --color-bg-black: #0d0d0d;
    --color-text-light: #e0e0e0;
    --color-text-secondary: #9da5b3;

    --color-accent-cyan: #00ffff;
    --color-accent-green: #66ff99;
    --color-accent-purple: #9370db;
    --color-accent-orange-glow: #ff8c00;
    --color-accent-red-glow: #ff4d4d;

    --font-primary: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    /* Consider adding a monospaced font for numbers if desired: */
    /* --font-numeric: 'Roboto Mono', 'Fira Code', Consolas, monospace; */
    --card-bg: rgba(35, 39, 42, 0.75); /* Slightly more opaque card */
    --card-shadow: 0 8px 24px rgba(0, 0, 0, 0.35);
    --border-radius-main: 8px;
}

body {
    font-family: var(--font-primary);
    background-color: var(--color-bg-deep-blue);
    color: var(--color-text-light);
    margin: 0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    font-size: 16px;
    line-height: 1.6;
}

.container {
    width: 95%;
    max-width: 1400px;
    padding: 0;
}

header {
    width: 100%;
    text-align: center;
    padding: 20px 0;
    margin-bottom: 30px;
}

header h1 {
    color: var(--color-accent-cyan);
    font-size: 2.5em;
    margin: 0;
    text-shadow: 0 0 8px rgba(0, 255, 255, 0.3);
}

section {
    background-color: var(--card-bg);
    padding: 25px 30px;
    margin-bottom: 30px;
    border-radius: var(--border-radius-main);
    box-shadow: var(--card-shadow);
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
}

h2 {
    color: var(--color-accent-green);
    border-bottom: 1px solid var(--color-accent-green);
    padding-bottom: 10px;
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 1.8em;
    text-shadow: 0 0 5px rgba(102, 255, 153, 0.2);
}

/* Resource Display Styling */
.resource {
    margin-bottom: 15px;
    font-size: 1.1em;
    display: flex;
    flex-wrap: wrap; /* Allow wrapping on very small screens if necessary */
    align-items: baseline; /* Align text along their baseline */
}

.resource span:first-child { /* Resource name, e.g., "Energy:" */
    font-weight: bold;
    color: var(--color-accent-cyan);
    margin-right: 8px;
    flex-shrink: 0; /* Prevent label from shrinking */
}

.resource span[id^="current"] { /* The current amount, e.g., currentEnergy */
    font-weight: bold;
    color: var(--color-text-light);
    margin-right: 10px;
    min-width: 70px; /* Adjust this based on expected number lengths! */
    display: inline-block;
    text-align: right;
    flex-shrink: 0;
    /* font-family: var(--font-numeric); /* Uncomment if using a numeric font */
}

/* Separator for the "|" character */
.resource .separator {
    color: var(--color-text-secondary);
    margin: 0 8px; /* Adjust spacing around separator */
    flex-shrink: 0;
}

.resource span[id$="NetChange"] {
    /* JavaScript will need to add a class for negative values to turn red/orange */
    color: var(--color-accent-green); /* Default to green for positive net change */
    font-weight: bold;
    margin-right: 5px; /* Space before unit label */
    min-width: 80px; /* Adjust this! */
    display: inline-block;
    text-align: right;
    flex-shrink: 0;
    /* font-family: var(--font-numeric); */
}
.resource span[id$="NetChange"].negative-value { /* Add this class via JS if value < 0 */
    color: var(--color-accent-red-glow);
}


.resource span[id$="ProductionRate"],
.resource span[id$="UpkeepRate"] {
    color: var(--color-text-secondary);
    min-width: 60px; /* Adjust this! */
    display: inline-block;
    text-align: right;
    /* font-family: var(--font-numeric); */
}

/* Styling for the (Production - Upkeep) part */
.resource .details-group {
    color: var(--color-text-secondary);
    margin-left: 0px; /* Let the separator handle spacing */
    display: inline-flex; /* Keep ( ) and numbers together */
    align-items: baseline;
    flex-shrink: 0;
}
.resource .details-group .separator-dash {
    margin: 0 3px; /* Space around the dash */
}


/* Unit labels like "e/sec", "c/sec" */
.resource .unit-label {
    color: var(--color-text-secondary);
    margin-left: 3px; /* Small space after right-aligned number */
    font-size: 0.9em;
    flex-shrink: 0;
}


/* Interaction Area Styling */
#interaction-area button {
    background-color: var(--color-accent-cyan);
    color: var(--color-bg-black);
    border: none;
    padding: 12px 25px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 1.1em;
    font-weight: bold;
    margin: 10px 0;
    cursor: pointer;
    border-radius: var(--border-radius-main);
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 10px rgba(0, 255, 255, 0.2);
}

#interaction-area button:hover:not(:disabled) {
    background-color: #33ffff; /* Lighter cyan */
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(0, 255, 255, 0.3);
}

#interaction-area button:disabled {
    background-color: #555; /* Using a generic disabled color from before */
    color: #888;
    cursor: not-allowed;
    box-shadow: none;
    transform: translateY(0);
}

#interaction-area p {
    color: var(--color-text-secondary);
}

/* Game Sections Wrapper (Buildings & Science) */
.game-sections-wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 450px), 1fr)); /* Responsive columns, ensure minmax doesn't exceed 100% */
    gap: 30px;
    width: 100%;
}

.building-item, .science-item {
    background-color: rgba(44, 50, 60, 0.85);
    padding: 15px 20px;
    margin-bottom: 15px;
    border-radius: calc(var(--border-radius-main) - 2px);
    border-left: 4px solid var(--color-accent-purple);
    box-shadow: 0 4px 10px rgba(0,0,0,0.2);
    transition: border-left-color 0.3s ease;
}

.science-item.is-unlocked { /* Class added by JS for unlocked science */
    border-left-color: var(--color-accent-green) !important; /* Use important if needed to override */
    opacity: 0.7; /* Make researched items slightly faded */
}
.science-item.is-unlocked h3 {
    text-decoration: line-through;
    text-decoration-color: var(--color-accent-green);
}


.building-item h3, .science-item h3 {
    margin-top: 0;
    margin-bottom: 8px;
    color: var(--color-text-light);
    font-size: 1.2em;
}

.building-item p, .science-item p {
    margin: 5px 0;
    font-size: 0.95em;
    color: var(--color-text-secondary);
}
.science-item p.cost-line { /* Add class="cost-line" to the cost paragraph in JS/HTML */
    color: var(--color-accent-cyan);
}
.science-item p.prereq-line span.met { /* Add class="met" to met prerequisites */
    color: var(--color-accent-green);
}
.science-item p.prereq-line span.unmet { /* Add class="unmet" to unmet prerequisites */
    color: var(--color-accent-red-glow);
}


.building-item button, .science-item button {
    background-color: var(--color-accent-purple);
    color: var(--color-text-light);
    border: none;
    padding: 8px 15px;
    font-size: 0.9em;
    font-weight: bold;
    border-radius: calc(var(--border-radius-main) - 4px);
    cursor: pointer;
    margin-top: 10px;
    transition: background-color 0.2s ease, transform 0.2s ease;
}

.building-item button:hover:not(:disabled),
.science-item button:hover:not(:disabled) {
    background-color: #ab82ff; /* Lighter purple */
    transform: translateY(-1px);
}

.building-item button:disabled,
.science-item button:disabled {
    background-color: #4a4a52; /* Darker, muted purple for disabled */
    color: #787887;
    cursor: not-allowed;
    transform: translateY(0);
}

footer {
    width: 100%;
    text-align: center;
    margin-top: 40px;
    padding: 20px 0;
    font-size: 0.9em;
    color: var(--color-text-secondary);
    border-top: 1px solid rgba(157, 165, 179, 0.2);
}

/* Placeholder for animations */
.slide-in {
    animation: slideInFromBottom 0.5s ease-out forwards;
}

@keyframes slideInFromBottom {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
